<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on Jamie&#39;s Blog</title>
    <link>http://akjamie.github.io/categories/cloud/</link>
    <description>Recent content in Cloud on Jamie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://akjamie.github.io/categories/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CKA &amp; important operation commands</title>
      <link>http://akjamie.github.io/post/2023-05-29-k8s-cka/</link>
      <pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2023-05-29-k8s-cka/</guid>
      <description>Complains about the CKA exam:
The CKA exam environment was changed from Terminal to Remote Desktop(VNC) from Last Jun, this is an absolutely shit
decision. The huge lagging causes that large amount of candidate&amp;rsquo;s time-wasting on always-waiting, and also Mouse is nearly useless - very difficult to locate what you want on Firefox browser, and eventually it highlights the good user experience on the k8s built-in documentation - Kubectl explain, how ridiculous it is !</description>
    </item>
    
    <item>
      <title>Explore Kubernetes Local PV &amp; PVC access mode</title>
      <link>http://akjamie.github.io/post/2023-04-08-k8s-pv-pvc-access-mode/</link>
      <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2023-04-08-k8s-pv-pvc-access-mode/</guid>
      <description>A local volume represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported. Compared to hostPath volumes, local volumes are used in a durable and portable manner without manually scheduling pods to nodes. The system is aware of the volume&amp;rsquo;s node constraints by looking at the node affinity on the PersistentVolume.</description>
    </item>
    
    <item>
      <title>Vault Agent with Kubernetes</title>
      <link>http://akjamie.github.io/post/2023-03-26-vault-agent-with-k8s/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2023-03-26-vault-agent-with-k8s/</guid>
      <description>Challenge Nearly all requests to Vault must be accompanied by an authentication token. This includes all API requests, as well as via the Vault CLI and other libraries. If you can securely get the first secret from an originator to a consumer, all subsequent secrets transmitted between this originator and consumer can be authenticated with the trust established by the successful distribution and user of that first secret.
The applications running in a Kubernetes environment is no exception.</description>
    </item>
    
    <item>
      <title>Vault on Kubernetes</title>
      <link>http://akjamie.github.io/post/2023-03-25-vault-on-k8s/</link>
      <pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2023-03-25-vault-on-k8s/</guid>
      <description>What is Vault? Vault introduction HashiCorp Vault is an identity-based secrets and encryption management system. A secret is anything that you want to tightly
control access to, such as API encryption keys, passwords, and certificates. Vault provides encryption services that are gated by authentication and authorization methods.Using Vault’s UI, CLI, or HTTP API, access to secrets and other sensitive data can be securely stored and managed, tightly controlled (restricted), and auditable.</description>
    </item>
    
    <item>
      <title>Kubernetes dashboard deployment</title>
      <link>http://akjamie.github.io/post/2022-04-12-kubernetes-dashboard/</link>
      <pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2022-04-12-kubernetes-dashboard/</guid>
      <description>Install dashboard To run the following command to deploy dashboard
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml once done, to check the resource status under the namespace of kubernetes-dashboard, if all the resources are running, that means dashboard is deployed successfully. ps:
On above screenshot, you can see the EXTERNAL-IP for kubernetes-dashboard service, the reason is i edit the service change the type from ClusterIp to LoadBalancer, and the loadbalancer is backed by Metallb.</description>
    </item>
    
    <item>
      <title>Demo - AWS EC2 instance auto scaling</title>
      <link>http://akjamie.github.io/post/2021-08-09-aws-demo-01-autoscale-test/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2021-08-09-aws-demo-01-autoscale-test/</guid>
      <description>I&amp;rsquo;m on the path of AWS Professinal Certified Architect exam preparation, want to document some key points in the demos for later review to enhance the understanding of knowledge. In this demo, i&amp;rsquo;m going to test the AWS auto scaling and utilize the EC2 network knowledges.
Objective To build a health checking springboot application and package as docker image hosted on AWS ECR. Setup basic network infrastructure, VPC, Subnet, Internet Gateway, Route table,Security group, etc.</description>
    </item>
    
    <item>
      <title>How i prepare the Google Cloud Professional Cloud Architect Certificate</title>
      <link>http://akjamie.github.io/post/2021-03-09-gcp-professional-cerified-architecture-prep/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2021-03-09-gcp-professional-cerified-architecture-prep/</guid>
      <description>Today i took Google Cloud Certified Professional Cloud Architect exam, the result is pass，through the final result is being reviewed for compliance with exam terms and conditions, i&amp;rsquo;d like to summarize the preparation path i went through for this exam, hope that could help others who want to take the same exam.
About the exam Professional Cloud Architect is one of the google cloud professonal cerficates, it requires a thorough understanding of cloud architecture and Google Cloud Platform, and verifies the capability of design, develop, and manage robust, secure, scalable, highly available, and dynamic solutions to drive business objectives.</description>
    </item>
    
    <item>
      <title>GCP Network Connection (1)</title>
      <link>http://akjamie.github.io/post/2020-09-07-gcp-network-connection/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2020-09-07-gcp-network-connection/</guid>
      <description>To document the setup process for VPC peering accross different GCP project VPCs for demo purpose only.
Setup VPC peering accross two GCP projects in this demo, will create two GCP projects, and setup VPC network peering to work as network bridge to make sure the vm in one of GCP project can access the MongoDB installed on VM of another GCP project. preparation Mongo backups 1&amp;gt; backup MongoDB
to use mongo shell command to backup data, samples as below</description>
    </item>
    
    <item>
      <title>AWS Serveless Application Model</title>
      <link>http://akjamie.github.io/post/2019-07-23-aws-server-application-model/</link>
      <pubDate>Mon, 10 Jun 2019 13:36:10 +0000</pubDate>
      
      <guid>http://akjamie.github.io/post/2019-07-23-aws-server-application-model/</guid>
      <description>AWS SAM - lambda demo Demo User Case User requirement: dynamically get regional mobile app feature availability status,status data is kept in AWS dynamodb. Projectcodes hierarchical structure presented as below ├── README.md -- This instructions file ├── event.json -- API Gateway Proxy Integration event payload ├── feature_availability -- Source code for a lambda function │ ├── __init__.py │ ├── app.py</description>
    </item>
    
  </channel>
</rss>
