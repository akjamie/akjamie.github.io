<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Jamie&#39;s Blog</title>
    <link>http://akjamie.github.io/categories/tech/</link>
    <description>Recent content in Tech on Jamie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jul 2019 13:36:10 +0800</lastBuildDate>
    
	<atom:link href="http://akjamie.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Serveless Application Model</title>
      <link>http://akjamie.github.io/post/2019-07-23-aws-server-application-model/</link>
      <pubDate>Tue, 23 Jul 2019 13:36:10 +0800</pubDate>
      
      <guid>http://akjamie.github.io/post/2019-07-23-aws-server-application-model/</guid>
      <description>AWS SAM - lambda demo Demo User Case User requirement: dynamically get regional mobile app feature availability status,status data is kept in AWS dynamodb. Projectcodes hierarchical structure presented as below ├── README.md -- This instructions file ├── event.json -- API Gateway Proxy Integration event payload ├── feature_availability -- Source code for a lambda function │ ├── __init__.py │ ├── app.py</description>
    </item>
    
    <item>
      <title>Free CA Certs setup using Certbot &#43; Docker &#43; Nginx</title>
      <link>http://akjamie.github.io/2019/07/14/free-https-certs-docker-nginx/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/2019/07/14/free-https-certs-docker-nginx/</guid>
      <description>Background Let&amp;rsquo;s Encrypt is a certificate authority that provides X.509 certificates for Transport Layer Security (TLS) encryption at no charge,The certificate is valid for 90 days, during which renewal can take place at anytime. 这样我们就可以用上免费的CA cert来安全expose我们自己的网站或者</description>
    </item>
    
    <item>
      <title>Harshicorp Vault Setup Config and integration with spring boot</title>
      <link>http://akjamie.github.io/2019/07/14/harshicorp-vault-setup-config/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://akjamie.github.io/2019/07/14/harshicorp-vault-setup-config/</guid>
      <description>Install vault Prepare docker-compose.yml, content as below (just a sample here, please don&amp;rsquo;t use it for production, there are more aspects should be considered) version: &#39;3&#39; services: consul: container_name: consul.server command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect=1 image: consul:latest restart: always volumes: - ./consul.server/config:/consul/config - ./consul.server/data:/consul/data ports: - &amp;quot;9300:9300&amp;quot; - &amp;quot;9500:9500&amp;quot; - &amp;quot;9600:9600/udp&amp;quot; vault: container_name: vault.server image: vault ports: - &amp;quot;8200:8200&amp;quot; restart: always links: - consul:consul.server volumes: - ./vault.server/config:/mnt/vault/config</description>
    </item>
    
  </channel>
</rss>